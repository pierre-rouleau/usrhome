# Sourced script: do-setenv  -*- mode: sh; -*-
#
# Purpose   : Set the value of an environment variable.
# Created   : Wednesday, March 27 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-08-01 22:47:48 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Set the value of a (possibly non-existing) environment variable into
# the current shell.
#
#  Usage: source do-setenv VARNAME [VALUE]
#  Usage: .      do-setenv VARNAME [VALUE]
#
#  VALUE: optional value.  Defaults to 1
#
# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# This script is meant to be sourced, and it should be assigned an alias named
# setenv such that it can be invoked directly by the setenv command.
#

# ----------------------------------------------------------------------------
# Code
# ----
#
#

if [ -z "$1" ]; then
    echo "Error: missing environment variable name."
    echo "Usage: setenv VARNAME VALUE"
    return 1
fi

value=$2
if [ -z "$value" ]; then
    value=1
fi

case "$1" in
    *=*)
        printf -- "*** setenv ERROR: do not use = between name and value.\n"
        return 1
        ;;
    *[-/+\\\*]*)
        printf -- "*** setenv ERROR: invalid variable name.  It has an invalid character.\n"
        return 1
        ;;
esac

export "$1"="$value" || return 1
echo "$1=$value"

# ----------------------------------------------------------------------------
#  Local Variables:
#  sh-shell: sh
#  End:

# Sourced script: setfor-usrhome-prompt-model-to  -*- mode: sh; -*-
#
# Purpose   : Change zsh prompt model in current shell.
# Created   : Wednesday, April  3 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-05-01 21:54:07 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Set the prompt model to the number specified by the argument.


# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
#


# ----------------------------------------------------------------------------
# Code
# ----
#
#
print_usage()
{
    echo "usrhome-prompt-model-to: Dynamically change shell prompt to another prompt model."
    echo " Usage:  usrhome-prompt-model-to MODEL-NUMBER"
    echo "  Supported NUMBER values: 0, 1 ,2 and 3."
    if [[ -z "$USRHOME_PROMPT_MODEL" ]]; then
        echo "  The current prompt model number is undefined."
    else
        echo "  The current prompt model number is: $USRHOME_PROMPT_MODEL"
    fi
}

# Validate user input
# ------------------
if [[ -z "$1" ]]; then
    >&2 printf "\
***ERROR***
 - usrhome-prompt-model-to:  requires the prompt model number.
***********
"
    print_usage
    return 1
fi

case "$1" in
    --help | -h)
        print_usage
        return 0
        ;;
    # prevent any other option:
    # note that it also precludes having symlink names that start with a '-'
    -?* )
        echo "****ERROR: usrhome-prompt-model-to does not support the $1 option."
        print_usage
        return 1
        ;;
    0)
        export USRHOME_PROMPT_MODEL=0
        ;;
    1)
        export USRHOME_PROMPT_MODEL=1
        ;;
    2)
        export USRHOME_PROMPT_MODEL=2
        ;;

    3)
        export USRHOME_PROMPT_MODEL=3
        ;;

    *)
    echo "ERROR: invalid prompt number: $1"
    print_usage
    return 1
esac

# ----------------------------------------------------------------------------
# Proceed, using method required by shell
# ---------------------------------------

# Identify running shell
#
# Set usrhome__running_shell to zsh, bash or unknown
source  "$USRHOME_DIR/ibin/which-shell"


case $usrhome__running_shell in
    "zsh")
        # The current implementation for Zsh prompt modification needs to
        # re-execute the sourcing of zsh configuration files.
        # That's done with an exec zsh, which would kill running jobs.
        # Protect against that.
        if [[ -n "$(jobs)" ]]; then
            # Don't allow re-starting zsh when there are running jobs
            # inside the shell.  The exec zsh might kill them if they
            # were not detached.  Warn the user and quit.
            echo "Unfinished jobs running.  Terminate them first!"
            return 1
        fi
        exec zsh
        ;;

    "bash")
        # Under Bash; no need to restart the shell, just use the usrhome-select-bash-prompt
        # shell function that was defined in usrhome/dot/bashrc.bash
        usrhome-select-bash-prompt
        ;;
    *)
        echo "Dynamic prompt modification is supported under '$usrhome__running_shell' shell."
        ;;
esac

# ----------------------------------------------------------------------------

# Sourced script: setfor-usrhome-prompt-model-to  -*- mode: sh; -*-
#
# Purpose   : Change zsh prompt model in current shell.
# Created   : Wednesday, April  3 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-05-27 14:57:53 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Set the prompt model to the number specified by the argument.


# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
#


# ----------------------------------------------------------------------------
# Code
# ----
#
#
# Topic: Prompt: Control
# ----------------------

print_status()
{
    if [ -n "$USRHOME_PROMPT_MODEL_OVERRIDE" ]; then
        echo "  Using overridden prompt model number: $USRHOME_PROMPT_MODEL_OVERRIDE"
    fi
    if [ -z "$USRHOME_PROMPT_MODEL" ]; then
        echo "  The current prompt model number is undefined."
    else
        echo "  Shell configured prompt model number: $USRHOME_PROMPT_MODEL"
    fi
}

print_usage()
{
    printf "\
usrhome-prompt-model-to: Change prompt to another model. Print used model.

Usage:  usrhome-prompt-model-to -h|--help
        usrhome-prompt-model-to [MODEL-NUMBER
        usrhome-prompt-model-to current
        usrhome-prompt-model-to reset

    - MODEL-NUMBER: 0, 1, 2 or 3.
    - current     : print current prompt model.
    - reset       : restore prompt model select by configuration.
"
    print_status
}

# Validate user input
# ------------------
if [[ -z "$1" ]]; then
    >&2 printf "\
***ERROR***
 - usrhome-prompt-model-to:  requires the prompt model number.
***********
"
    print_usage
    return 1
fi

case "$1" in
    --help | -h)
        print_usage
        return 0
        ;;


    # prevent any other option:
    # note that it also precludes having symlink names that start with a '-'
    -?* )
        echo "****ERROR: usrhome-prompt-model-to does not support the $1 option."
        print_usage
        return 1
        ;;

    current)
        print_status
        return 0
        ;;

    reset)
        # stop overriding if that was already overridden
        if [ -z "$USRHOME_PROMPT_MODEL_OVERRIDE" ]; then
            echo "The prompt model is already the one selected by configuration: $USRHOME_PROMPT_MODEL"
            echo "Nothing to do."
            return 0
        else
            if [ "$USRHOME_PROMPT_MODEL_OVERRIDE" = "$USRHOME_PROMPT_MODEL" ]; then
                echo "Overridden prompt model is the same as the one selected by configuration: $USRHOME_PROMPT_MODEL"
                unset USRHOME_PROMPT_MODEL_OVERRIDE
                echo "Overriding cancelled, nothing else to do."
                return 0
            else
                echo "Restoring configuration requested prompt model: $USRHOME_PROMPT_MODEL"
                unset USRHOME_PROMPT_MODEL_OVERRIDE
            fi
        fi
        ;;

    0)
        export USRHOME_PROMPT_MODEL_OVERRIDE=0
        ;;
    1)
        export USRHOME_PROMPT_MODEL_OVERRIDE=1
        ;;
    2)
        export USRHOME_PROMPT_MODEL_OVERRIDE=2
        ;;

    3)
        export USRHOME_PROMPT_MODEL_OVERRIDE=3
        ;;

    *)
    echo "ERROR: invalid prompt number: $1"
    print_usage
    return 1
esac

# ----------------------------------------------------------------------------
# Proceed, using method required by shell
# ---------------------------------------

source  "$USRHOME_DIR/ibin/change_prompt"

# ----------------------------------------------------------------------------
#  Local Variables:
#  sh-shell: sh
#  End:

# Sourced script: setfor-bash-alias  -*- mode: sh; -*-
#
# Purpose   : Set Bash shell alias.
# Created   : Friday, March 29 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-04-29 20:37:37 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Defines a set of utility command shortcuts implemented as alias.
# These alias are for the Bash Shell (bash) .
# This is an early version of the file; it will evolve as it's tested on
# various computers and environments.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#

# ----------------------------------------------------------------------------
# Code
# ----
#
#
usrhome_trace_in "\$USRHOME_DIR/ibin/setfor-bash-alias"

# ----------------------------------------------------------------------------
# Include aliases available in all USRHOME supported shells.

. "$USRHOME_DIR/ibin/setfor-alias"

# ----------------------------------------------------------------------------
# Set shortcut functions for Bash shell
# -------------------------------------

# ----------------------------------------------------------------------------
# Topic: Alias: where
# -------------------

# The zsh where command is used often, but not available under bash.
# Create it as an alias to type
alias where='type'

# ----------------------------------------------------------------------------
# Topic: Alias: ls commands
# -------------------------

lsl()
{
    case $(uname) in
        'Darwin' )
            # On macOS the ls -O option ensures that the symlinks are shown with a name
            # that ends with the @ character.  Use that.
            ls -FGO | grep '@$'
            ;;
        *)
            # On Linux, use find:
            # `find` output one directory per line and prints ./ in front of each directory
            # - sed removes the leading './' from the names
            # - sort places them in the same order ls would
            # - echo (without double quote) removes all lines and add a newline at end.
            echo $(find ! -name . -prune -type l | sed -e 's|\./||g' | sort )
            ;;
    esac
}
# ----------------------------------------------------------------------------
# Cleanup
usrhome_trace_out
# ----------------------------------------------------------------------------

# Sourced script: setfor-path  -*- mode: sh; -*-
#
# Purpose   : Add USRHOME directories to PATH.
# Created   : Saturday, March 30 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-11-30 18:18:47 EST, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Update PATH to include the USRHOME directory and, optionally,
# the directories required for Homebrew directories as requested
# by the user persistent configuration.  Remember original PATH inside
# USRHOME_ORIGINAL_PATH

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
#

# ----------------------------------------------------------------------------
# Code
# ----
#
#
usrhome_trace_in "\$USRHOME_DIR/ibin/setfor-path"

# ------------

if [ -z "$USRHOME__IN_LOGIN" ] || [ "$USRHOME_CONFIG_AT_LOGIN" = "1" ]; then
    # if not a login shell OR user allows configuration at login...

    if [ ! "$USRHOME__PATH_SET" = "1" ]; then
        # .. and it has not yet been done, then configure, otherwise don't.
        # ----------------------------------------------------------------------------
        # Topic: Security Issue Check: Functions

        usrhome_xz_vulnerability()
        {
            # Arg1: optional: "disputed"
            echo ""
            if [ "$1" = "disputed" ]; then
                usrhome_printf "Potential (disputed) security issue detected by usrhome:\n%s\n" \
                               " - Possibly compromised version ${xz_ver} of xz installed!"
            else
                usrhome_printf "SECURITY ISSUE DETECTED By USRHOME:\n%s\n" \
                               " - Compromised version ${xz_ver} of xz installed!"
            fi
            usrhome_printf " - in: %s\n    See: https://repology.org/project/xz/cves\n" "${xz_path}"
        }

        usrhome_security_check()
        {
            # check and warn if known problematic versions are installed
            # xz version 5.6,0, 5.6.1 have backdoors
            xz_ver=$(xz --version | grep liblzma | awk '{print $2 }')
            xz_path=$(which xz)
            case $xz_ver in
                '5.6.0' | '5.6.1' )
                    usrhome_xz_vulnerability
                    usrhome_printf "     - https://en.wikipedia.org/wiki/XZ_Utils#Backdoor_incident\n\n"
                    case "$(uname)" in
                        'Darwin')
                            usrhome_printf "Run: 'brew update; brew upgrade' AS SOON AS POSSIBLE to downgrade xz!\n\n"
                            ;;
                    esac
                    ;;

                '5.2.5' )
                    usrhome_xz_vulnerability "disputed"
                    usrhome_printf "     - https://nvd.nist.gov/vuln/detail/CVE-2020-22916\n"
                    ;;

            esac
            unset xz_ver
            unset xz_path
        }

        # ----------------------------------------------------------------------------
        # Remember original PATH in USRHOME_ORIGINAL_PATH
        # Topic: Path : Original Path
        export USRHOME_ORIGINAL_PATH="$PATH"

        # ----------------------------------------------------------------------------
        # Topic: Path : usrhome-switch-path

        # Switch back to original path and back
        usrhome_switch_path()
        {
            oldp=$PATH
            export PATH="$USRHOME_ORIGINAL_PATH"
            export USRHOME_ORIGINAL_PATH="$oldp"
            if [ "$USRHOME_SHOW_PATH_ACTIVATION" = "1" ]; then
                echo "- Switch PATH with USRHOME_ORIGINAL_PATH"
            fi
            unset oldp
        }
        # The function uses valid sh syntax to allow shellcheck verification.
        # Use an easier to type command.
        alias usrhome-switch-path=usrhome_switch_path
    fi

    # ----------------------------------------------------------------------------

    if [ ! "$USRHOME__PATH_SET" = "1" ]; then
        # ----------------------------------------------------------------------------
        # Add entries in PATH as required by user configuration

        # Topic: Path: Homebrew
        # ---------------------
        # Set Homebrew first, just above system's PATH, USRHOME and user's bin will
        # be prepended before that; to take precedence over homebrew and over system.

        if [ "$USRHOME_USE_HOMEBREW" = "1" ]; then
            . "$USRHOME_DIR/ibin/envfor-homebrew"
        fi

        # Topic: Path: USRHOME
        # Add usrhome directories in PATH
        . "$USRHOME_DIR/ibin/envfor-usrhome"

        # Remember that PATH was set.  Prevent setting it again.
        export USRHOME__PATH_SET=1

        # Check and report if there are any security issues
        usrhome_security_check
    fi

    # ----------------------------------------------------------------------------
    # Topic: Shell Age
    # ----------------

    USRHOME_SHELL_OPEN_DATE="$(date)"
    export USRHOME_SHELL_OPEN_DATE

    case "$(uname)" in
        Darwin)
            if [ "$USRHOME_USE_HOMEBREW" = "1" ]; then
                if which gdate > /dev/null; then
                    USRHOME_SHELL_OPEN_TIME=$(gdate +%s)
                fi
            fi
            ;;

        Linux)
            USRHOME_SHELL_OPEN_TIME=$(date +%s)
            ;;
    esac
    export USRHOME_SHELL_OPEN_TIME
fi

# ----------------------------------------------------------------------------
# Cleanup
usrhome_trace_out

# ----------------------------------------------------------------------------
#  Local Variables:
#  sh-shell: sh
#  End:

# Sourced script: envfor-emacs-for-man  -*- mode: sh; -*-
#
# Purpose   : Set environment to use Emacs as the man reader.
# Created   : Wednesday, April 17 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-04-17 21:03:07 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Emacs is much more powerful and useful as man to read and navigate man pages
# that man is.  This scripts sets up the shell to use Emacs as the tool to
# view that man pages inside the current shell.
#
# By default it sets up the shell to use a shell instance of Emacs running
# in terminal mode.  A man command would then open a local instance of
# text-based Emacs.
#
# By specifying extra option arguments, it's also possible to open an
# independent Emacs GUI process or to launch it inside an already running
# emacs server.  These options can be passed to the setup script (this one),
# which sets the default, and to the man() function, allowing overriding the
# chosen default.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# Presence of Emacs.
#
# Side Effects:
# - Set USRHOME_MAN_MODE variable.

# ----------------------------------------------------------------------------
# Code
# ----
#
#

USRHOME_MAN_MODE=
if [[ -n "$1" ]]; then
    case $1 in
        -g)
            # This will use the 'ge' script.
            # That script is part of the templates.
            # Check if it is available and if not, inform the user that
            # the script will use the template code.  The user might want to
            # copy it inside a directory present on PATH and may want to
            # modify it to fit the user's needs better.
            # later.  Activate the mode only if the user accepts.
            ge_path=
            if ! which ge > /dev/null;  then
                printf "ATTENTION! The 'ge' script is not in your PATH!\n"
                printf " USRHOME will use %s/template/bin/ge\n" "$USRHOME_DIR"
                printf " You may want to copy it in a directory in your PATH\n"
                printf " and possibly modify it to better suit you.\n\n"
            fi
            USRHOME_MAN_MODE='-g'
            echo ". Using Emacs in graphics mode as man reader."
            ;;
        -s)
            USRHOME_MAN_MODE='-s'
            echo ". Using Emacs server as man reader."
            ;;
        -t)
            USRHOME_MAN_MODE='-t'
            echo ". Using Emacs in text mode as man reader."
            ;;
        *)
            printf "ERROR:  use-emacs-for-man invalid option: %s\n" "$1"
            printf " Usage: use-emacs-for-man [-g | -s | -t]\n"
            return 1
    esac
else
    USRHOME_MAN_MODE='-t'
    echo ". Using Emacs in text mode as man reader."
fi


man()
{
    # Usage: man [-g | -s | -t] TOPIC
    # -g : emacs started in graphics mode
    # -s : using emacs server
    # -t : start emacs in terminal mode in the current shell
    #
    # man() default operation is set by: use-emacs-for-man argument
    #  - none: -t is set as default
    #  - -g  : -g is set as default
    #  - -s  : -s is set as default.

    local topic
    topic="$1"
    local man_mode
    man_mode="$USRHOME_MAN_MODE"
    if [[ -n "$2" ]]; then
        case $1 in
            -g)
                man_mode='-g'
                topic="$2"
                ;;
            -s)
                man_mode='-s'
                topic="$2"
                ;;
            -t)
                man_mode='-t'
                topic="$2"
                ;;
            *)
                printf "ERROR:  emacs-for-man invalid option: %s\n" "$1"
                printf " Usage: man [-g | -s | -t] TOPIC\n"
                return 1
                ;;
        esac
    fi

    case $man_mode in
        '-g')
            # Launch GUI Emacs in separate process; don't wait.
            # The shell can continue to be used.
            if which ge > /dev/null; then
                ge --eval "(progn (man \"$topic\") (delete-window))"
            else
                "$USRHOME_DIR/template/bin/ge" --eval "(progn (man \"$topic\") (delete-window))"
            fi
            ;;

        '-s')
            # Use emacsclient to the running Emacs daemon
            emacsclient --no-wait -e "(man \"$topic\")"
            ;;

        '-t')
            # Open a local terminal-based copy of Emacs in the current
            # terminal.
            emacs --eval "(progn (man \"$topic\") (delete-window))"
            ;;
    esac
}

# Cleanup
# This leaves USRHOME_MAN_MODE in the shell.

# ----------------------------------------------------------------------------

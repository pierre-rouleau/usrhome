# Sourced script: envfor-emacs-for-man  -*- mode: sh; -*-
#
# Purpose   : Set environment to use Emacs as the man reader.
# Created   : Wednesday, April 17 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-04-18 10:30:04 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# Emacs is much more powerful and useful as man to read and navigate man pages
# that man is.  This scripts sets up the shell to use Emacs as the tool to
# view that man pages inside the current shell.
#
# By default it sets up the shell to use a shell instance of Emacs running
# in terminal mode.  A man command would then open a local instance of
# text-based Emacs.
#
# By specifying extra option arguments, it's also possible to open an
# independent Emacs GUI process or to launch it inside a client ofn already
# running emacs server.  These options can be passed to the setup script (this
# one), which sets the default, and to the man() function, allowing overriding
# the chosen default.  See print_man_usage() for more information.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# Presence of Emacs.
#
# Side Effects:
# - Set USRHOME_MAN_MODE variable.

# ----------------------------------------------------------------------------
# Code
# ----
#
#

print_man_usage()
{
    printf "\
 Usage: man [-g | -s |-S | -t] TOPIC
  -g : emacs started in graphics mode
  -G : same as -g, but start emacs faster with less initialization (using -Q)
  -s : using Emacs server: open man page in emacsclient
  -S : same as -s, except meant for issuing the man command
       in a shell running withing Emacs: does not delete any window.
  -t : start emacs in terminal mode in the current shell.
       This is the default if no option is specified.
  -T : same as -t, but start emacs faster with less initialization (using -Q)

  You can also specify the same options to man() to
  override the option passed to use-emacs-for-man.

  And you can execute the man executable by using the -man
  option. After that option pass all man executable options.
  For example, to list all man pages for 'cc' with the man
  executable after activating use-emacs-for-man, do this:

    man -man -a -w cc

\n"
}

USRHOME_MAN_MODE=
if [[ -n "$1" ]]; then
    case $1 in
        -g | -G)
            # This will use the 'ge' script.
            # That script is part of the templates.
            # Check if it is available and if not, inform the user that
            # the script will use the template code.  The user might want to
            # copy it inside a directory present on PATH and may want to
            # modify it to fit the user's needs better.
            # later.  Activate the mode only if the user accepts.
            ge_path=
            if ! which ge > /dev/null;  then
                printf "ATTENTION! The 'ge' script is not in your PATH!\n"
                printf " USRHOME will use %s/template/bin/ge\n" "$USRHOME_DIR"
                printf " You may want to copy it in a directory in your PATH\n"
                printf " and possibly modify it to better suit you.\n\n"
            fi
            USRHOME_MAN_MODE="$1"
            case $1 in
                -g)
                    echo ". Using Emacs in graphics mode as man reader."
                    ;;
                -G)
                    echo ". Using Emacs quickly in graphics mode as man reader."
                    ;;
            esac
            ;;
        -s | -S)
            # Requesting to use Emacs client/server mechanism.
            # Check if the Emacs daemon is running.  If it is not, start it.
            if ! emacsclient -a false -e 't' > /dev/null 2>&1; then
                echo "ATTENTION: Emacs Daemon was not running, starting it!"
                emacs --daemon
            fi
            USRHOME_MAN_MODE='-s'
            echo ". Using Emacs server as man reader."

            ;;
        -t)
            USRHOME_MAN_MODE='-t'
            echo ". Using Emacs in text mode as man reader."
            ;;

        -T)
            USRHOME_MAN_MODE='-T'
            echo ". Using Emacs quickly in text mode as man reader."
            ;;

        *)
            printf "ERROR:  use-emacs-for-man invalid option: %s\n" "$1"
            print_man_usage
            return 1
    esac
else
    USRHOME_MAN_MODE='-t'
    echo ". Using Emacs in text mode as man reader."
fi


man()
{
    # See print_man_usage() for arguments.

    local man_mode
    man_mode="$USRHOME_MAN_MODE"

    local topic
    topic="$1"

    if [[ -n "$2" ]]; then
        man_mode="$1"
        topic="$2"
    fi

    local man_emacs_opt
    man_emacs_opt=

    case $man_mode in
        -g | -s | -S | -t)
            ;;
        -G | -T)
            man_emacs_opt=-Q
            ;;

        -man )
            echo "Using man executable"
            ;;

        *)
            printf "ERROR:  emacs-for-man invalid option: %s\n" "$1"
            print_man_usage
            return 1
            ;;
    esac

    case $man_mode in
        '-g' | '-G')
            # Launch GUI Emacs in separate process; don't wait.
            # The shell can continue to be used.
            # Start Emacs with the -Q options when -G is requested.
            if which ge > /dev/null; then
                ge ${man_emacs_opt} --eval "(progn (man \"$topic\") (delete-window))"
            else
                "$USRHOME_DIR/template/bin/ge" ${man_emacs_opt} --eval "(progn (man \"$topic\") (delete-window))"
            fi
            ;;

        '-s' | '-S')
            # Use emacsclient to the running Emacs daemon
            # Check if the emacsclient is running, if not warn user
            # and exit.
            if ! lsof -c emacsclient > /dev/null; then
                echo "ERROR: Emacs client NOT running!"
                echo "Start emacsclient inside another window and try again."
                return 1
            else
                case $man_mode in
                    '-s')
                        emacsclient --eval "(progn (man \"$topic\") (delete-window))" > /dev/null
                        ;;
                    '-S')
                        emacsclient --eval "(progn (man \"$topic\"))" > /dev/null
                        ;;
                esac
            fi
            ;;

        '-t' | '-T')
            # Open a local terminal-based copy of Emacs in the current
            # terminal.
            emacs ${man_emacs_opt} -nw --eval "(progn (man \"$topic\") (delete-window))"
            ;;

        '-man' )
            shift
            command man "$@"
            ;;
    esac
}

# Cleanup
# This leaves USRHOME_MAN_MODE in the shell.

# ----------------------------------------------------------------------------

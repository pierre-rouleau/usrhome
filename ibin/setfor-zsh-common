# Sourced script: setfor-zsh-common  -*- mode: sh; -*-
#
# Purpose   : Common zsh functions also used by configuration.
# Created   : Friday, October  4 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-10-04 21:45:49 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
#


# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
#


# ----------------------------------------------------------------------------
# Code
# ----
#
#

# Topic: Title
# ------------

set_title()
{
    # Arguments: A list of words to use as title.
    #  - Accepts no argument: clears the title text section..
    #  - store into title_text as one shell 'word' string.
    title_text="$*"

    # Credit:
    # - Alvin Alexander for the macOS echo trick.
    #   - https://alvinalexander.com/blog/post/mac-os-x/change-title-bar-of-mac-os-x-terminal-window/
    if [ -z "$INSIDE_EMACS" ]; then
        os_type=$(uname)
        case $os_type in
            'Darwin' )
                # Supports all shells with a simple echo.
                # On macOS, the escape sequences are passed properly by echo.
                # shellcheck disable=SC2028
                echo "\033]0;${title_text}\007\c"
                ;;

            'Linux')
                # [:todo 2024-05-04, by Pierre Rouleau: Complete this. Currently under testing. ]

                DISABLE_AUTO_TITLE="true"

                # Build the extra sequence that controls the title.
                if [ -n "$SSHPASS" ]; then
                    title_shell_depth="L${SHLVL}+"
                else
                    title_shell_depth="L${SHLVL}"
                fi
                echo -n -e "\e]2;${title_text} (${USER}@$(hostname -s), ${title_shell_depth}, $(pwd))\a"
                ;;

            *)
                echo "ERROR: The $os_type Operating System is not yet supported!"
                echo "       Please report the error on GitHub USRHOME website."
                echo "       You may also provide a Pull Request."
                return 1
        esac
    fi
    export USRHOME_TITLE=$title_text
}


# Topic: SSH
# ----------

# ssh4__remote performs the ssh connection and deals with the terminal title.
#
# The caller must export the following environment variables:
#   ----------------------- ------------------------------------------------
#   Variable Name           Purpose
#   ----------------------- ------------------------------------------------
#   USRHOME_SSH4__PGM_NAME  Name of the executing command (the script name)
#   USRHOME_SSH4__IPV4ADDR  The IP address (currently only IPv4 is supported)
#   USRHOME_SSH4__HOSTNAME  The host name of the target system
#   USRHOME_SSH4__USERNAME  The user name on that target system
#   ----------------------- ------------------------------------------------
#
ssh4__remote()
{
    # Arg1: title
    old_title="$(set | grep "^title_text" | sed 's/title_text=//g')"
    set_title "$1"
    shift
    "${USRHOME_DIR}/bin/sub-ssh4/ssh4-scoped" "$@"
    # re-establish original shell window title.
    set_title "$old_title"
}

# ----------------------------------------------------------------------------

# Sourced script: envfor-rust  -*- mode: sh; -*-
#
# Purpose   : Setup Rust programming environment.
# Created   : Monday, April  1 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-08-02 13:15:31 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
# If Rust is installed, set environment for using the currently installed
# Rust version. If the source depot is available set the RUST_SRC_PATH
# environment variable to the proper directory.
#
# Notes:
#   - If writing a program written in Rust, try to use the same version
#     Rust compiler and the source code.  The `rustup update` command
#     normally updates to the latest stable version and that's on the
#     Git 'stable' branch.
#
# TO USE:
#
# - Copy this file into $USRHOME_DIR_USRCFG/ibin/envfor-rust
# - Write, inside the following files:
#     - $USRHOME_DIR_USRCFG/do-user-zshrc.zsh
#     - $USRHOME_DIR_USRCFG/do-user-bashrc.bash
#   the following code:
#
#     alias use-rust='source $USRHOME_DIR_USRCFG/ibin/envfor-rust'
#     alias manr='rustup man'
#
#
#  Note: The Rust man pages are not available when Rust is installed.
#  However the man pages are available via the ``rustup man`` command.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# - Script can be sourced under: bash and zsh.
#
# - Rust
#
#   - Install           := cd ; curl https://sh.rustup.rs -sSf | sh
#   - Update            := rustup update
#   - Get source        := cdpub ; git clone https://github.com/rust-lang/rust.git
#   - Get stable branch := cdpub rust ; git checkout stable
#

# ----------------------------------------------------------------------------
# Code
# ----
#
# Topic: Rust
#
# Install support for Rust, which includes CARGO, the Rust source code and the
# definition of the manr alias.
#
# When creating a sub-shell, the .cargo/env does not need to be run again,
# because CARGO_HOME, RUST_SRC_PATH and the modified PATH are exported and
# passed to the child shell.
#
# However the alias is NOT passed to the child shell and must be re-defined.

if command -v rustc > /dev/null 2>&1; then
    printf ".  rustc %s is already found in shell.\n" "$(rustc --version)"
else
    # Activate Rust programming language support only once.
    if [[ -a "$HOME/.cargo/env" ]]; then
        . "$HOME/.cargo/env"
        export CARGO_HOME="$HOME/.cargo"
        usrhome_rustv=$(rustc --version | awk '{print substr($0,7)}')
        printf ". Using Rust %s.\n" "$usrhome_rustv"
        # Check for presence of the Rust source files in
        # the public rust repo expected by USRHOME
        usrhome_rustv_fpathname="$USRHOME_DIR_PUB/rust/src/version"
        if [[ -f "$usrhome_rustv_fpathname" ]]; then
            export RUST_SRC_PATH="$USRHOME_DIR_PUB/rust/src"
            printf "   Rust ver. %s source is available.\n" "$(cat "$usrhome_rustv_fpathname")"
        else
            echo "**** CAUTION *****"
            echo "Rust source is NOT installed!"
            echo " Expecting: $usrhome_rustv_fpathname"
            echo " See $USRHOME_DIR_USRCFG/ibin/envfor-rust"
            echo " Get it with: cdpub ; git clone https://github.com/rust-lang/rust.git"
            echo "******************"
        fi
        # cleanup
        unset usrhome_rustv
        unset usrhome_rustv_fpathname
    else
        printf ". WARNING: Requesting Rust, but it is not installed!\n"
    fi
fi

# Create the manr alias if rustup is available.
if command -v rustup > /dev/null 2>&1; then
    if command -v manr > /dev/null 2>&1; then
        printf ".  manr is already defined.\n"
    else
        #  The Rust man pages are not available when Rust is installed.
        #  However the man pages are available via the ``rustup man`` command.
        #  Create a 'manr' command.
        alias manr='rustup man'
    fi
fi

# ----------------------------------------------------------------------------

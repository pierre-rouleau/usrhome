#!/bin/sh
# SH FILE: find-executable
#
# Purpose   : Print all executable files found in the specified directory tree.
# Created   : Wednesday, July 17 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-10-28 18:08:09 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
#


# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# POSIX compliant: find and printf.


# ----------------------------------------------------------------------------
# Code
# ----
#
#

print_usage()
{
    printf -- "\
find-executable: Find and print all executable files in ROOT directory tree.

 Usage: find-executable [--inc-hidden|-H] [--inc-link|-L]  [ROOT]
        find-executable [-h|--help]

 - ROOT: Optional directory tree.  Defaults to current directory.
 - By default:
   - Exclude all hidden directories (such as .git)
     unless --inc-hidden option is specified.
   - Exclude symbolic links to files unless --inc-link is specified.

 Exit codes: 0 if at least one file found.
           : 1 if nothing is found.
           : 2 if the command line is invalid.

"
}

print_error_and_exit()
{
    # $1 : error message
    printf -- "
*** find-executable ERROR:
      %s
******************
    Use -h to print usage.
" "$1"
    exit 2
}

# ----------------------------------------------------------------------------
# Validate arguments

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    # help requested explicitly: no error.
    exit 0
fi

search_hidden="false"
if [ "$1" = "--inc-hidden" ] || [ "$1" = "-H" ] ; then
    search_hidden="true"
    shift
fi

include_symlink="false"
if [ "$1" = "--inc-link" ] || [ "$1" = "-L" ] ; then
    include_symlink="true"
    shift
fi

case "$1" in
    -*)
       print_error_and_exit "Invalid argument: $1"
       ;;
esac

rootname="."
if [ -n "$1" ]; then
    rootname="$1"
    if [ ! -d "$rootname" ]; then
        print_error_and_exit "Specified ROOT does not exists: ${rootname}"
    fi
fi
if [ -n "$2" ]; then
    print_error_and_exit "Too many arguments."
fi

# ----------------------------------------------------------------------------
# Proceed

case "$(uname)" in
    Darwin)
        mode='+111'
        ;;

    Linux)
        mode='/111'
        ;;
esac

if [ "$include_symlink" = "true" ]; then
    type='( -type f -or -type l )'
else
    type='-type f'
fi

if [ "$search_hidden" = "true" ]; then
    # shellcheck disable=SC2086  # quoting would destroy the arguments.
    find "${rootname}" -perm "${mode}" ${type}
else
    # shellcheck disable=SC2086  # quoting would destroy the arguments.
    find "${rootname}" -perm "${mode}" ${type} \( ! -path '*/.*' \)
fi

# ----------------------------------------------------------------------------
# Local Variables:
# sh-shell: sh
# End:

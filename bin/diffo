#!/bin/sh
# SH FILE: diffo
#
# Purpose   : Compare 2 object files by comparing their assembler code.
# Created   : Wednesday, June 12 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2024-06-12 14:24:50 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Description
# -----------
#
# Compare 2 object code files by generating the assembler code for each and
# comparing these files.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# - diff, objdump, strings, heads

# ----------------------------------------------------------------------------
# Code
# ----
#
#

print_usage()
{
    printf -- "
diffo -- Compare 2 object files by comparing their assembler code.

 Usage: diffo [[-w | --with-source] | [-s | --string]] OBJ-OLD OBJ-NEW
        diffo -h | --help

   - OBJ-OLD            : path of the old object file.
   - OBJ-NEW            : path of the new object file.
   - -w | --with-source : insert C/C++ source code in the generated assembler.
   - -s | --string      : also compare strings extracted from files.

  Note: - diffo requires a version of objdump which supports the
          --no-addresses option, preventing a diff from simply
          detecting different addresses.
        - If the OBJDUMP environment variable is defined, it
          is taken as the name (or path name) of the objdump
          program to use.  Otherwise it uses the objdump
          program accessible on PATH.
        - To include embedded C/C++ source code inside the object
          file, the files MUST be compiled with debugging activated.
          Usually this is the -g option for the compiler.
        - With USRHOME, you can inject command line options into the cc
          command line of the current shell with the 'use-cc-options'.
          Do:  'use-cc-options -g'
"
}

# --
# validate arguments

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    # help requested explicitly: no error.
    exit 0
fi


# check for optional switches.
with_source=
with_strings=
options=2
while [ "$options" -ge 1 ]; do
    if [ "$1" = "-w" ] || [ "$1" = "--with-source" ]; then
        with_source="true"
        shift
    elif [ "$1" = "-s" ] || [ "$1" = "--strings" ]; then
        with_strings="true"
        shift
    fi
    options=$(( options - 1 ))
done

# Check if remaining arguments are 2 file names
if [ "$#" -ge 3 ]; then
    printf -- "*** diffo ERROR: too many arguments: %s\n" "$*"
    print_usage
    exit 1
fi

if [ -z "$1" ] || [ -z "$2" ]; then

    printf -- "*** diffo ERROR: missing arguments.\n"
    print_usage
    exit 1
fi

# get file names and check their validity
objf_old=
objf_new=
if  [ -f "$1" ]; then
    objf_old="$1"
else
    printf -- "*** diffo ERROR: File does not exist: %s\n" "$1"
    exit 2
fi
if  [ -f "$2" ]; then
    objf_new="$2"
else
    printf -- "*** diffo ERROR: File does not exist: %s\n" "$2"
    exit 2
fi
shift
shift

# --
# proceed

asmf_old="${objf_old%.*}".asm
asmf_new="${objf_new%.*}".asm

objdumper=objdump
if [ -n "$OBJDUMP" ]; then
    objdumper="$OBJDUMP"
fi


diff_exit_code=0
if [ "$with_source" = "" ]; then
    printf -- "diffo - Differences in assembler:\n"
    # use tail +3 to remove the name of the file printed in the second line.
    if ${objdumper}  --disassemble --demangle --no-addresses     "$objf_old" | tail +3 > "$asmf_old"; then
        if ${objdumper} --disassemble --demangle --no-addresses  "$objf_new" | tail +3 > "$asmf_new"; then
            diff "$asmf_old" "$asmf_new"
            diff_exit_code=$?
        fi
    fi
else
    printf -- "diffo - Differences in assembler intermixed with C/C++ source:\n"
    if ${objdumper}  --disassemble --demangle --source --no-addresses    "$objf_old" | tail +3 > "$asmf_old"; then
        if ${objdumper} --disassemble --demangle --source --no-addresses "$objf_new" | tail +3 > "$asmf_new"; then
            diff "$asmf_old" "$asmf_new"
            diff_exit_code=$?
        fi
    fi
fi

if [ "$with_strings" = "true" ]; then
    txtf_old="${objf_old%.*}".txt
    txtf_new="${objf_new%.*}".txt

    strings "$objf_old" > "$txtf_old"
    strings "$objf_new" > "$txtf_new"

    printf -- "\ndiffo - Difference in text sections:\n"
    diff "$txtf_old" "$txtf_new"
    ec="$?"
    if [ "$ec" = "0" ]; then
        ec=$diff_exit_code
    fi
    exit $ec
else
    exit $diff_exit_code
fi

# ----------------------------------------------------------------------------
# Local Variables:
# sh-shell: sh
# End:

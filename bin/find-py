#!/bin/sh
# SH FILE: find-py
#
# Purpose   : Find all Python files in specified directory tree.
# Created   : Tuesday, October  8 2024.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2025-04-23 08:04:13 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Module Description
# ------------------
#
#


# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
#


# ----------------------------------------------------------------------------
# Code
# ----
#
#

pgm_name="$(basename "$0")"

print_usage()
{
    printf -- "
%s: Find and print the name of every Python file found in directory tree.
           Search for files with the following extensions:
          - .py, .pyw

 Usage: %s -h|--help

  • Print this help information.

 Usage: %s  [DIR, ...]

  • Search and print name of Python files found in specified directories.
    - If DIR is not specified, search in the current working directory.

" "$pgm_name" "$pgm_name" "$pgm_name"
}

# [:todo 2024-10-08, by Pierre Rouleau: Add ability to pass find options such as -x]

# --
# Check validity of arguments

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    exit 0
fi

case $(uname) in
    Darwin)
        find_path_option='-f'
        ;;
    Linux)
        find_path_option=
        ;;
    *)
        printf -- "%s ** Error Operating System, %s, is not supported!\n" "$pgm_name" "$(uname)"
        exit 1
        ;;
esac


# -----------------------------------------------------------------------------
# Proceed:
#
# -x : do not search into other disks
# stderr redirected to /dev/null to hide warnings trying to access
# non-accessible directories.

search()
{
    # Arg1: dirname : name of directory to search
    find -L                               \
         ${find_path_option} "$dirname"   \
         \( -type f -or -type l \)        \
         \(  -name "*.py"                 \
         -or -name "*.pyw"                \
         \) -print 2> /dev/null
}

if [ -z "$1" ]; then
    dirname="."
    search
else
    for dirname in "$@"; do
        search
    done
fi

# ----------------------------------------------------------------------------
# Local Variables:
# sh-shell: /bin/sh
# End:

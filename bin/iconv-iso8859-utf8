#!/bin/sh
# SH FILE: iconv-iso8859-utf8
#
# Purpose   : Convert a ISO-8859 encoded file to UTF-8.
# Created   : Monday, September  1 2025.
# Author    : Pierre Rouleau <prouleau001@gmail.com>
# Time-stamp: <2025-09-01 20:55:33 EDT, updated by Pierre Rouleau>
# ----------------------------------------------------------------------------
# Description
# -----------
#

# A simple utility that converts the encoding of a text file from ISO-8859-1
# to UTF-8.
#
# This is something often needed for old text files written in the
# western world where the latin ISO-8859 was previously used to encode files
# with accentuated letters or other non ASCII characters.
#
# The iconv support a large set of encoding.  This command only supports one
# set. Being able to use the command without any argument can be very useful
# under several cases, including using it under Emacs Dired.
#
# If you need other conversions look into iconv supported encodings and create
# your own conversion or add the ability to specify environment that provides
# the input and output encoding.

# ----------------------------------------------------------------------------
# Dependencies
# ------------
#
# iconv, printf, cp

# ----------------------------------------------------------------------------
# Code
# ----
#
#
os_name="$(uname)"
print_usage()
{
    printf -- "\
iconv-iso8859-utf8 : Convert encoding of file from ISO-8859 to UTF-8.

  USAGES:
  ➨ iconv-iso8859-utf8 [-h|--help]
        -h, --help: print this help.

  ➨ iconv-iso8859-utf8 FILE
        Convert the encoding of FILE from ISO-8859-1 to UTF-8.

  ENVIRONMENT:
    - USRHOME_DIR_TMP  Required environment variable that must identify the
                       absolute path of a directory where temporary files are
                       stored.
  NOTE:  Use file FILE to print FILE's encoding.
"
}

# --
# validate arguments

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    print_usage
    # help requested explicitly: no error.
    exit 0
fi

if [ -z "$1" ] ; then
    print_usage
    exit 1
elif [ -n "$2" ]; then
    echo "ERROR: too many arguments."
    print_usage
    exit 1
fi

if [ -z "$USRHOME_DIR_TMP" ]; then
    >&2 printf -- "*** iconv-iso8859-utf8 ERROR: USRHOME_DIR_TMP envvar missing.\n"
    >&2 printf -- "        Use --help for more info.\n"
    exit 1
fi
if [ ! -d "$USRHOME_DIR_TMP" ];  then
    >&2 printf -- "*** iconv-iso8859-utf8 ERROR: USRHOME_DIR_TMP: not a directory.\n"
    >&2 printf -- "        It's value is: %s\n" "$USRHOME_DIR_TMP"
    >&2 printf -- "        Use --help for more info.\n"
    exit 1
fi
if [ ! -e "$1" ]; then
    >&2 printf -- "*** iconv-iso8859-utf8 ERROR: USRHOME_DIR_TMP: invalid file name.\n"
    >&2 printf -- "      You specified: %s\n" "$1"
    >&2 printf -- "      This file does not exist.  Use --help for more info.\n"
    exit 1
fi

# --
# proceed
target_file="$(basename "$1")"
cp "$1" "$USRHOME_DIR_TMP/${target_file}" || exit 1
iconv -f iso-8859-1 -t utf-8 "$USRHOME_DIR_TMP/${target_file}" > "$1"

# ----------------------------------------------------------------------------
